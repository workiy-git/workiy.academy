{"ast":null,"code":"var _jsxFileName = \"D:\\\\CRM\\\\07-02-24\\\\CRM-TOOL\\\\crm\\\\src\\\\components\\\\atoms\\\\FullScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../../assets/styles/logincss/header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FullScreen = () => {\n  _s();\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [logoData, setLogoData] = useState([]);\n  const toggleFullScreen = () => {\n    const elem = document.documentElement;\n    if (!isFullScreen) {\n      if (elem.requestFullscreen) {\n        elem.requestFullscreen();\n      } else if (elem.mozRequestFullScreen) {\n        elem.mozRequestFullScreen();\n      } else if (elem.webkitRequestFullscreen) {\n        elem.webkitRequestFullscreen();\n      } else if (elem.msRequestFullscreen) {\n        elem.msRequestFullscreen();\n      }\n    } else {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen();\n      } else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n      } else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n      }\n    }\n    setIsFullScreen(!isFullScreen);\n  };\n  useEffect(() => {\n    document.title = 'Logo';\n    return () => {\n      document.title = 'Default Title';\n    };\n  }, []);\n  useEffect(() => {\n    axios.get('http://localhost:9000/api/fullscreen').then(response => {\n      console.log('Data received:', response.data);\n      setLogoData(response.data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-\",\n    children: logoData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fullscreen\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"exitFullscreenButton\",\n        className: \"header_buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"full_screen_img\",\n          alt: \"\",\n          src: `data:image/jpg;base64, ${item.fullscreen_icon}`,\n          onClick: toggleFullScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(FullScreen, \"LXVwvQzo2eb2rBtnegFOT5BVVOQ=\");\n_c = FullScreen;\nexport default FullScreen;\nvar _c;\n$RefreshReg$(_c, \"FullScreen\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","FullScreen","_s","isFullScreen","setIsFullScreen","logoData","setLogoData","toggleFullScreen","elem","document","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","title","get","then","response","console","log","data","catch","error","className","children","map","item","index","id","alt","src","fullscreen_icon","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/CRM/07-02-24/CRM-TOOL/crm/src/components/atoms/FullScreen.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../../assets/styles/logincss/header.css';\r\n\r\nconst FullScreen = () =>{\r\n    const [isFullScreen, setIsFullScreen] = useState(false);\r\n    const [logoData, setLogoData] = useState([]);\r\n\r\n  const toggleFullScreen = () => {\r\n    const elem = document.documentElement;\r\n\r\n    if (!isFullScreen) {\r\n      if (elem.requestFullscreen) {\r\n        elem.requestFullscreen();\r\n      } else if (elem.mozRequestFullScreen) {\r\n        elem.mozRequestFullScreen();\r\n      } else if (elem.webkitRequestFullscreen) {\r\n        elem.webkitRequestFullscreen();\r\n      } else if (elem.msRequestFullscreen) {\r\n        elem.msRequestFullscreen();\r\n      }\r\n    } else {\r\n      if (document.exitFullscreen) {\r\n        document.exitFullscreen();\r\n      } else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen();\r\n      } else if (document.webkitExitFullscreen) {\r\n        document.webkitExitFullscreen();\r\n      } else if (document.msExitFullscreen) {\r\n        document.msExitFullscreen();\r\n      }\r\n    }\r\n\r\n    setIsFullScreen(!isFullScreen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = 'Logo';\r\n\r\n    return () => {\r\n      document.title = 'Default Title';\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:9000/api/fullscreen')\r\n      .then((response) => {\r\n        console.log('Data received:', response.data);\r\n        setLogoData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n  }, []);\r\n\r\n  return(\r\n\r\n    <div className='header-'>\r\n      {logoData.map((item, index) => (\r\n        <div key={index} className=\"fullscreen\">\r\n        <button id=\"exitFullscreenButton\" className=\"header_buttons\">\r\n        <img className=\"full_screen_img\" alt=\"\" src={`data:image/jpg;base64, ${item.fullscreen_icon}`} onClick={toggleFullScreen} />\r\n        </button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}